version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - public-build:/var/www/html/public/build
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: laravel-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root@123
      MYSQL_DATABASE: recom_db
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: laravel-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - .:/var/www/html 
      - ./certbot/webroot:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - public-build:/var/www/html/public/build  
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: laravel-certbot
    volumes:
      - ./certbot/webroot:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: >
      /bin/sh -c 'trap exit TERM;
      while :; do
        sleep 12h & wait $${!};
        certbot renew --webroot -w /var/www/certbot &&
        nginx_container_id=$$(docker ps -qf "name=laravel-nginx") &&
        [ -n "$$nginx_container_id" ] && docker exec $$nginx_container_id nginx -s reload;
      done'
    networks:
      - app-network

volumes:
  db_data:
  public-build:

networks:
  app-network:
    driver: bridge

