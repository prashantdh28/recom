services:
  recom-app:
    image: 241533115769.dkr.ecr.us-east-1.amazonaws.com/recom-app:latest
    container_name: recom-app
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - recom-db
    volumes:
      - public-build:/var/www/html/public/build
    networks:
      - recom-network

  recom-db:
    image: mysql:8.0
    container_name: recom-db
    restart: unless-stopped
    env_file:
      - docker-db.env
    ports:
      - "3306:3306"
    volumes:
      - recom_db_data:/var/lib/mysql
    networks:
      - recom-network

  recom-nginx:
    image: nginx:latest
    container_name: recom-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./:/var/www/html
      - ./certbot/webroot:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - public-build:/var/www/html/public/build
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - recom-app
    networks:
      - recom-network

  certbot:
    image: certbot/certbot
    container_name: recom-certbot
    volumes:
      - ./certbot/webroot:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: >
      /bin/sh -c 'trap exit TERM;
      while :; do
        sleep 12h & wait $${!};
        certbot renew --webroot -w /var/www/certbot &&
        nginx_container_id=$$(docker ps -qf "name=recom-nginx") &&
        [ -n "$$nginx_container_id" ] && docker exec $$nginx_container_id nginx -s reload;
      done'
    networks:
      - recom-network

  recom-mysql-backup:
    image: mysql:8.0
    container_name: recom-mysql-backup
    restart: unless-stopped
    env_file:
      - docker-db.env
    volumes:
      - ./mysql-backups:/mysql-backups
    entrypoint: >
      /bin/sh -c '
        mkdir -p /mysql-backups;
        echo "Waiting for MySQL to be ready...";
        until mysqladmin ping -h recom-db -u root -p$$MYSQL_ROOT_PASSWORD --silent; do
          sleep 5;
        done;
        while true; do
          echo "Taking backup at $(date)";
          mysqldump -h recom-db -u root -p$$MYSQL_ROOT_PASSWORD $$MYSQL_DATABASE | gzip > /mysql-backups/recom-db-$(date +%F-%H-%M-%S).sql.gz;
          find /mysql-backups -type f -mtime +7 -name "*.sql.gz" -delete;
          sleep 86400;
        done'
    networks:
      - recom-network

  recom-scheduler:
    image: 241533115769.dkr.ecr.us-east-1.amazonaws.com/recom-app:latest
    container_name: recom-scheduler
    restart: unless-stopped
    depends_on:
      - recom-db
    env_file:
      - .env
    entrypoint: >
      /bin/sh -c '
        echo "Starting Laravel Scheduler...";
        while [ true ]; do
          php artisan schedule:run >> /dev/null 2>&1
          sleep 60
        done'
    networks:
      - recom-network

volumes:
  recom_db_data:
  public-build:

networks:
  recom-network:
    driver: bridge

